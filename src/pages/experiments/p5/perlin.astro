---
import UnstyledBase from "../../../layouts/UnstyledBase.astro";
---

<UnstyledBase title="P5 Experiments" description="p5p5p5p5p5p5p5p5">
  <div id="p5canvas"></div>
</UnstyledBase>

<script>
  import p5 from "p5";

  const sketch = (p: p5) => {
    var gridSize = 50; // Number of cells in each row and column
    var cellSize: number; // Size of each cell in the grid
    var scaleX, scaleY;
    var t = 0;
    var colors = ["orangered", "green", "blue", "tan", "teal", "magenta"];

    p.setup = () => {
      var size = Math.floor(window.innerHeight / gridSize) * gridSize;
      p.createCanvas(size, size);
      cellSize = size / gridSize; // Calculate cell size based on canvas size

      // Seed the noise function
      p.noiseSeed(Math.random());

      // Random scale factors for noise
      scaleX = Math.random() * 50;
      scaleY = Math.random() * 50;
      p.shuffle(colors, true);
      // No loop needed unless you want to animate or interact
      p.noLoop();
    };

    p.draw = () => {
      p.background(255); // Set background to white
      p.noStroke();
      t += 0.01;
      // Draw loop for our grid
      for (var y = 0; y < gridSize; y++) {
        for (var x = 0; x < gridSize; x++) {
          // Generate Perlin noise value for this cell
          var noiseVal = p.noise(x / scaleX + t, y / scaleY + t);

          // Map noise value to grayscale color
          var colorValue = Math.floor((noiseVal + 1) * 128);
          //console.log(noiseVal)

          if (noiseVal > 0 && noiseVal <= 0.4) {
            p.fill(colors[0]); // Set fill color
          }
          if (noiseVal > 0.4 && noiseVal <= 0.5) {
            p.fill(colors[1]); // Set fill color
          }
          if (noiseVal > 0.5 && noiseVal <= 1) {
            p.fill(colors[2]); // Set fill color
          }
          // Draw the rectangle for this grid cell
          p.rect(x * cellSize, y * cellSize, cellSize, cellSize);
          //circle(x * cellSize, y * cellSize, cellSize*1.5);
        }
      }
    };
  };

  const canvas = document.getElementById("p5canvas");
  export const myp5 = new p5(sketch, canvas!);
</script>

<style>
  #p5canvas {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
  }
</style>
