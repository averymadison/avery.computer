---
import UnstyledBase from "../layouts/UnstyledBase.astro";

const sentence = [
  ["the"],
  ["deliberate", "intentional", "purposeful"],
  [
    "arrangement",
    "choreography",
    "combination",
    "creation",
    "juxtaposition",
    "ordering",
    "selection",
  ],
  ["of"],
  [
    "actions",
    "colors",
    "feelings",
    "light",
    "love",
    "meaning",
    "movement",
    "objects",
    "shapes",
    "smells",
    "sounds",
    "space",
    "systems",
    "tastes",
    "thoughts",
    "time",
    "words",
  ],
  ["for"],
  [
    "animals",
    "friends",
    "god",
    "its own sake",
    "lovers",
    "oneself",
    "others",
    "plants",
    "remembering",
    "the universe",
    "this moment only",
  ],
];
---

<UnstyledBase
  title="Design Is"
  description="An attempt to define what it means to design."
  ogImage="/og/design-is.png"
  ogAlt="Design is the purposeful creation of meaning for oneself."
>
  <div class="definition">
    <header>
      <h1>Design is</h1>
    </header>
    <div class="sentence">
      {
        sentence.map((fragment, i) => (
          <fieldset>
            {fragment.sort().map((word) => (
              <div>
                <input
                  type="radio"
                  id={word}
                  name={i.toString()}
                  value={word}
                />
                <label for={word}>{word}</label>
              </div>
            ))}
          </fieldset>
        ))
      }
    </div>
    <footer>
      <a class="refresh" href="/design">refresh to redefine</a>
    </footer>
  </div>
</UnstyledBase>

<script lang="ts">
  function selectRandomWords() {
    const sentence = document.querySelector(".sentence");
    const fieldsets = sentence?.querySelectorAll("fieldset");

    fieldsets?.forEach((fieldset) => {
      const inputs = fieldset.querySelectorAll("input");
      const randomIndex = Math.floor(Math.random() * inputs.length);
      inputs[randomIndex].checked = true;
    });
  }

  selectRandomWords();

  function setPageTitle() {
    const words = Array.from(document.querySelectorAll("input:checked")).map(
      (input) => input.value
    );
    const title = `Design is ${words.join(" ")}`;
    document.title = title;
  }

  setPageTitle();

  document.body.addEventListener("change", setPageTitle);
</script>

<style lang="scss">
  .definition {
    font-family: "Times New Roman", Times, serif;
    font-size: var(--step-1);
    padding: var(--space-l);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: var(--space-l);
    min-height: 100dvh;
    width: 100dvw;
  }

  header,
  footer {
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1;
    padding-block: var(--space-m);
  }

  .sentence {
    line-height: 1;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: var(--space-2xl);
    flex: 1;

    fieldset {
      all: unset;
      display: flex;
      flex-direction: column;
      gap: var(--space-2xs);
    }

    @media (width < 960px) {
      gap: var(--space-xl);
      flex-direction: column;

      fieldset {
        flex-flow: row wrap;
        align-items: center;
        justify-content: center;
        gap: var(--space-2xs);
        column-gap: var(--space-m);
        max-width: 35ch;
      }
    }
  }

  h1 {
    font-weight: normal;
    font-size: var(--step-2);
  }

  .refresh {
    font-size: 0.8em;
    font-style: italic;
    opacity: 0.6;

    &:hover {
      opacity: 1;
    }
  }

  input[type="radio"] {
    display: none;

    + label {
      cursor: pointer;
    }

    &:not(:checked) + label {
      opacity: 0.2;
    }

    &:checked + label,
    + label:hover {
      opacity: 1;
    }
  }
</style>
