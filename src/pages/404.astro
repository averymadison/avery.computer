---
import Layout from "../layouts/Layout.astro";
---

<Layout title="404: Not Found" description="This page could not be found.">
  <div class="glitch-container">
    <h1 class="text" data-text="404">404</h1>
    <div class="scanlines"></div>
    <div class="noise"></div>
  </div>
</Layout>

<style lang="scss">
  .glitch-container {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    overflow: hidden;
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: -1;

    --rgb-line-height: 1px;
    --rgb-area-height: 6px;
    --scanline-opacity: 0.15;
  }

  .scanlines {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
    pointer-events: none;
    z-index: 2;
    animation: pulse 1s linear infinite alternate;

    &::before,
    &::after {
      content: "";
      position: absolute;
      width: 100%;
    }

    &::before {
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      mix-blend-mode: difference;
      background: linear-gradient(
        to bottom,
        rgba(255, 255, 255, 0.1) 50%,
        rgba(0, 0, 0, var(--scanline-opacity)) 51%
      );
      background-size: 100% 4px;
      animation: scanlines 1s steps(60) infinite;
    }

    &::after {
      background: rgba(255, 255, 255, 0.08);
      height: 2px;
      animation: scanline 5s linear infinite;
      mix-blend-mode: difference;
    }
  }

  .noise {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' version='1.1' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:svgjs='http://svgjs.dev/svgjs' viewBox='0 0 700 700' width='700' height='700'%3E%3Cdefs%3E%3Cfilter id='nnnoise-filter' x='-20%25' y='-20%25' width='140%25' height='140%25' filterUnits='objectBoundingBox' primitiveUnits='userSpaceOnUse' color-interpolation-filters='linearRGB'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.102' numOctaves='4' seed='15' stitchTiles='stitch' x='0%25' y='0%25' width='100%25' height='100%25' result='turbulence'%3E%3C/feTurbulence%3E%3CfeSpecularLighting surfaceScale='15' specularConstant='0.75' specularExponent='20' lighting-color='%23ffffff' x='0%25' y='0%25' width='100%25' height='100%25' in='turbulence' result='specularLighting'%3E%3CfeDistantLight azimuth='3' elevation='100'%3E%3C/feDistantLight%3E%3C/feSpecularLighting%3E%3CfeColorMatrix type='saturate' values='0' x='0%25' y='0%25' width='100%25' height='100%25' in='specularLighting' result='colormatrix'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Crect width='700' height='700' fill='%2300000000'%3E%3C/rect%3E%3Crect width='700' height='700' fill='%23ffffff' filter='url(%23nnnoise-filter)'%3E%3C/rect%3E%3C/svg%3E");
    background-size: 700px;
    background-repeat: repeat;
    pointer-events: none;
    animation: noise 0.5s infinite step-end;
    mix-blend-mode: difference;
    opacity: 0.4;
  }

  .text {
    position: relative;
    font-size: clamp(100px, 45vw, 600px);
    z-index: -1;
    line-height: 1;
    letter-spacing: 0.02em;
    margin-top: -0.1em;
    pointer-events: none;
    -webkit-user-select: none;
    user-select: none;
    text-shadow: -1px -1px 1px rgba(0, 0, 255, 0.8),
      1px 1px 1px rgba(255, 0, 0, 0.8);
    filter: blur(1px);

    &::after {
      content: attr(data-text);
      position: absolute;
      top: 0;
      left: -0.005em;
      text-shadow: -1px -1px 3px rgba(0, 0, 255, 0.9),
        1px 1px 3px rgba(255, 0, 0, 0.9), 6px 0 2px var(--bg);
      animation: textOffset 5s linear infinite;
    }
  }

  @keyframes textOffset {
    0% {
      clip-path: polygon(0 110%, 100% 110%, 100% 120%, 0 120%);
    }
    100% {
      clip-path: polygon(0 -20%, 100% -20%, 100% -10%, 0 -10%);
    }
  }

  @keyframes scanline {
    0% {
      transform: translate3d(0, 100vh, 0);
    }
    50% {
      transform: translate3d(0, calc(var(--rgb-area-height) * -1), 0);
    }
  }

  @keyframes pulse {
    0% {
      opacity: 0.5;
    }

    50% {
      opacity: 1;
    }
  }

  @keyframes noise {
    @for $i from 0 through 20 {
      #{$i * 5%} {
        background-position: random(700) + px random(700) + px;
      }
    }
  }
</style>
