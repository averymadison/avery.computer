

#synth {
  max-width: 540px;
  
  &[data-loading="true"] {
    pointer-events: none;
    .synth-randomize {
      display: none;
    }
  }
  
  &[data-enabled="true"] {
    #synth-start {
      display: none;
    }
  }
  
  &[data-enabled="false"] {
    .synth-instruments,
    .synth-staff {
      display: none;
    }
  }
}

.lcd-bg {
  fill: var(--color-lcd-bg);
}

.lcd-base, .notehead {
  fill: var(--color-lcd-dark);
}

.lcd-highlight {
  fill: var(--color-lcd-light);
}

.synth-base {
  fill: var(--color-synth-base);
}

.synth-between-keys {
  fill: var(--color-neutral-3);
}

.instrument, .notehead {
  display: none;
}

.synth-endcap {
  fill: var(--color-synth-endcap);
}

.lcd-outline {
  fill: var(--color-synth-lcd-outline);
}

.synth-keys-outline,
.synth-key .pressed-overlay,
.synth-key .crack {
  fill: var(--color-synth-keys-outline);
}

.synth-shadow, .synth-keys-shadow {
  fill: black;
  opacity: 0.1;
}

#synth-start {
  cursor: pointer;
  &:not(:hover) .lcd-base {
    animation: pressStart 2s infinite;
    &:nth-child(2) {
      animation-delay: 0.2s;
    }
    &:nth-child(3) {
      animation-delay: 0.4s;
    }
    &:nth-child(4) {
      animation-delay: 0.6s;
    }
    &:nth-child(5) {
      animation-delay: 0.8s;
    }
  }

  &:hover .lcd-base {
    opacity: 1;
  }
}

@keyframes pressStart {
  0%, 10% {
    opacity: 0.8;
  }
  100% {
    opacity: 1;
  }
}

.synth-key {
  cursor: pointer;
  transition: fill 0.4s ease-out;
  
  .pressed-overlay {
    transform: translateY(2px);
    transition: transform 0.1s ease-out;
  }
  
  .crack {
    opacity: 0;
    transition: opacity 0.4s ease-out;
  }
  
  &.white {
    .base {
      fill: var(--color-synth-whitekey);
    }
  }
  
  &.black {
    .base {
      fill: var(--color-synth-blackkey);
    }
    .highlight {
      fill: rgba(white, 0.15);
    }
  }
  
  .base {
     transition: fill 0.4s ease-out;
  }
  
  &.pressed {
    .base {
      transition: none;
      fill: var(--color-synth-whitekey-pressed);
    }
    &.black .base {
      fill: var(--color-synth-blackkey-pressed);
    }
    .pressed-overlay {
      transition: none;
      transform: translateY(0);
    }
    .crack {
      transition: none;
      opacity: 1;
    }
  }
}

.key-letter {
  fill: rgba(black, 0.3);
  opacity: 0;
  display: none;
  transform: translateY(4px);
  transition: 0.4s ease-out;
  &.visible {
    opacity: 1;
    display: block;
    transform: translateY(0);
  }
  &.fadeout {
    opacity: 0;
    transition: opacity 1s ease-in;
    transition-delay: 0.2s;
  }
}

.synth-instrument {
  cursor: pointer;
  .synth-randomize {
    display: none;
  }
}

body.has-touch {
  .synth-randomize {
    display: none;
  }
}

// Hover-only
@media not all and (pointer: coarse) {
  .synth-instrument:hover {
    .synth-randomize {
      display: block;
    }
    .instrument {
      display: none !important;
    }
  }
}

.instrument-arrow {
  cursor: pointer;
  &:hover .lcd-base {
    fill: var(--color-lcd-hover);
  }
}
