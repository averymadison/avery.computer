---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";

import { smartquotes } from "../helpers/helpers";
import { Icon } from "./Icon/Icon";

interface Props {
  project: CollectionEntry<"projects">;
}

const { project } = Astro.props;

const { title, description, repo, img, video, cta } = project.data;
---

<div class="project">
  {img && <Image src={img.src} alt={img.alt} class="img" />}
  {
    video && (
      <video
        autoplay
        loop
        muted
        playsinline
        preload="none"
        poster={video.poster}
      >
        <source src={video.src} type="video/mp4" />
      </video>
    )
  }
  <div class="details">
    <div class="details-text">
      <h3 class="title">{title}</h3>
      <div class="description">
        {smartquotes(description)}
      </div>
    </div>
    <footer>
      {
        cta && (
          <a
            class:list={["button", "cta", { disabled: cta.url === undefined }]}
            href={cta.url}
            target="_blank"
            aria-disabled={cta.url === undefined}
          >
            {cta.text}
          </a>
        )
      }
      {
        repo && (
          <a
            class="button repo"
            href={`https://github.com/${repo}`}
            target="_blank"
          >
            <Icon icon="github" size="24" />
          </a>
        )
      }
    </footer>
  </div>
</div>

<style lang="scss">
  .project {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    background-color: var(--gray-3);
    border-radius: var(--radius-m);
    overflow: hidden;
    position: relative;

    &::before {
      content: "";
      position: absolute;
      inset: 0;
      border: 1px solid var(--gray-a3);
      border-radius: var(--radius-m);
      pointer-events: none;
    }
  }

  .details {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-m);
    padding: var(--space-m);
    width: 100%;
  }

  .details-text {
    display: flex;
    flex-direction: column;
    gap: var(--space-2xs);
  }

  .img {
    background-color: var(--gray-3);
    width: 100%;
    display: block;
    line-height: 0;
  }

  h3 {
    font-size: var(--step-1);
  }

  .description {
    line-height: 1.3;
  }

  footer {
    display: flex;
    flex-flow: row;
    width: 100%;
    gap: var(--space-s);
  }

  .button {
    font-weight: var(--font-weight-medium);
    background-color: var(--gray-2);
    border: 1px solid var(--gray-a4);
    color: var(--gray-11);
    padding-inline: var(--space-m);
    padding-block: var(--space-xs);
    border-radius: var(--radius-s);
    display: flex;
    align-items: center;
    justify-content: center;

    &.disabled {
      opacity: 0.5;
    }

    &.cta {
      flex: 1;
    }
  }

  :global(.dark) .button {
    background-color: var(--gray-4);
    border-color: var(--gray-a2);
  }

  .button:not(.disabled):hover {
    background-color: var(--gray-1);
    color: var(--gray-12);
  }

  :global(.dark) .button:not(.disabled):hover {
    background-color: var(--gray-5);
  }
</style>
