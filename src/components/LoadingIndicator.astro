---

---

<progress id="loading" aria-hidden value={0} max={1}></progress>

<style>
  progress {
    border-radius: 0;
    pointer-events: none;
    position: fixed;
    z-index: 1031;
    top: 0;
    left: 0;
    width: 100vw;
    height: 3px;
    transition: opacity 100ms ease-in;
  }

  progress::-webkit-progress-bar {
    background-color: transparent;
  }

  progress::-webkit-progress-value {
    background-color: var(--blue-9);
    transition: width 400ms ease-in;
  }
</style>

<script is:inline lang="ts">
  (() => {
    let animationDuration = 300;
    let progress = 0;
    let opacity = 0;

    /** @type {number | undefined} */
    let trickleInterval = undefined;

    const element = document.getElementById("loading");

    /** @param {typeof progress} _progress */
    const setProgress = (_progress) => {
      progress = _progress;
      element.setAttribute("value", progress);
    };

    /** @param {typeof opacity} _opacity */
    const setOpacity = (_opacity) => {
      opacity = _opacity;
      element.style.setProperty("opacity", String(opacity));
    };

    setOpacity(opacity);

    document.addEventListener("astro:before-preparation", () => {
      setOpacity(1);
      setProgress(0.4);
      trickleInterval = window.setInterval(() => {
        if (progress < 0.95) {
          setProgress(progress + Math.random() * 0.03);
        }
      }, animationDuration);
    });

    document.addEventListener("astro:before-swap", (ev) => {
      setProgress(1);
      ev.newDocument.body.prepend(element);
      window.clearInterval(trickleInterval);
      trickleInterval = undefined;
    });

    document.addEventListener("astro:after-swap", () => {
      window.setTimeout(() => {
        setOpacity(0);
      }, animationDuration / 2);

      window.setTimeout(() => {
        setProgress(0);
      }, animationDuration * 2);
    });
  })();
</script>
