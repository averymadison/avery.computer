{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/howler/dist/howler.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/is-touch-device/build/index.js","webpack:///./node_modules/assert/assert.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/util/node_modules/inherits/inherits_browser.js","webpack:///./src/js/synth.js","webpack:///./src/js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","__WEBPACK_AMD_DEFINE_RESULT__","HowlerGlobal","this","init","self","Howler","_counter","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","mobileAutoEnable","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","flac","_enableMobileAudio","isMobile","test","_mobileEnabled","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","then","_resumeAfterSuspend","Howl","src","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhrWithCredentials","xhrWithCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","push","event","action","play","load","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","once","_clearTimer","playHtml5","playbackRate","Promise","catch","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","stop","noteOff","_cleanBuffer","isNaN","arguments","_interval","args","indexOf","apply","fade","from","to","len","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","min","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","realTime","playing","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","index","splice","remCache","cache","on","events","off","isId","keys","Array","isArray","msg","task","shift","ended","_drain","reset","limit","cnt","_panner","howl","_parent","parent","createGain","createGainNode","_errorListener","_loadListener","error","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","xhr","XMLHttpRequest","open","withCredentials","responseType","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","standalone","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_super","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","g","Function","_typeof2","obj","iterator","constructor","_typeof","DocumentTouch","maxTouchPoints","msMaxTouchPoints","compare","a","b","isBuffer","Buffer","_isBuffer","util","hasOwn","pSlice","functionsHaveNames","pToString","toString","isView","arrbuf","ArrayBuffer","DataView","assert","ok","regex","getName","func","isFunction","truncate","inspect","something","rawname","fail","actual","expected","message","operator","stackStartFunction","AssertionError","_deepEqual","strict","memos","isDate","getTime","isRegExp","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","actualVisitedObjects","isPrimitive","getPrototypeOf","aIsArgs","isArguments","bIsArgs","ka","objectKeys","kb","sort","objEquiv","expectedException","Error","isPrototypeOf","_throws","shouldThrow","block","TypeError","_tryBlock","userProvidedMessage","isUnexpectedException","isError","options","generatedMessage","getMessage","captureStackTrace","stack","out","fn_name","idx","next_line","substring","inherits","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","process","formatRegExp","f","isString","objects","join","String","Number","JSON","stringify","_","isNull","isObject","deprecate","isUndefined","noDeprecation","warned","throwDeprecation","traceDeprecation","debugEnviron","debugs","opts","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","array","hash","forEach","val","arrayToHash","getOwnPropertyNames","formatError","RegExp","output","base","braces","toUTCString","formatProperty","formatArray","map","pop","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","getOwnPropertyDescriptor","set","line","substr","ar","arg","re","objectToString","debuglog","env","NODE_DEBUG","toUpperCase","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","string","date","regexp","isNullOrUndefined","isSymbol","prop","log","origin","add","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","versions","addListener","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","copy","fill","readUInt8","ctor","superCtor","super_","writable","configurable","TempCtor","isTouchDevice","require","randomIntFromInterval","floor","random","typeof_default","body","classList","synth","instrumentIcons","instrumentIconWrapper","noteheads","keyLetters","prevArrow","nextArrow","numInstruments","STAFF_TYPE_PREFIX","NOTEHEAD_PREFIX","SOUNDS_DIRECTORY","ui","click","ding","noteFadeOut","activeInstrument","isMouseDown","isTouching","_enableSynth","dataset","enabled","assign","instruments","staffType","A3","Asharp3","B3","C3","C4","Csharp3","Csharp4","D3","D4","Dsharp3","Dsharp4","E3","E4","F3","Fsharp3","G3","Gsharp3","_loadSounds","setRandomInstrument","revealKeyboardLetters","_disableSynth","_unloadSounds","callback","loading","baseSpeed","force","speed","roulette","nextInstrument","setActiveInstrument","icon","display","showActiveInstrumentIcon","prevInstrument","hideNoteheads","notehead","letter","hideKeyboardLetters","remove","pressKey","noteName","keyId","getElementById","contains","playNote","currentNote","querySelector","showActiveNotehead","releaseKey","releaseAllKeys","handleClickNext","preventDefault","handleClickPrev","handleClickInstrument","handleMouseDown","handleMouseEnter","handleMouseOut","handleTouchStart","handleTouchEnter","handleTouchMove","touch","originalEvent","touches","posXStart","offset","left","posYStart","top","scrollTop","posXEnd","getBoundingClientRect","width","posYEnd","height","pressKeyMatchingCoords","clientX","clientY","handleMouseUp","handleTouchEnd","handleKeyDown","handleKeyUp","querySelectorAll","_cacheDOM","_bindEvents","_unbindEvents","getElementsByTagName","getAttribute","hostname","target","gtag","page_title","page_path","pathname","search","refresh"],"mappings":"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","file":"assets/builds/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","/*!\n *  howler.js v2.0.15\n *  howlerjs.com\n *\n *  (c) 2013-2018, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto iOS enabler.\n      self.mobileAutoEnable = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'running' : 'running';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Mobile browsers will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _enableMobileAudio: function() {\n      var self = this || Howler;\n\n      // Only run this on mobile devices if audio isn't already eanbled.\n      var isMobile = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi|Chrome/i.test(self._navigator && self._navigator.userAgent);\n      if (self._mobileEnabled || !self.ctx || !isMobile) {\n        return;\n      }\n\n      self._mobileEnabled = false;\n      self.mobileAutoEnable = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Fix Android can not play in suspend state.\n        Howler._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._mobileEnabled = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio on iOS.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.mobileAutoEnable) {\n        Howler._enableMobileAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        var num = 0;\n        for (var i=0; i<self._sounds.length; i++) {\n          if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n            num++;\n            id = self._sounds[i]._id;\n          }\n        }\n\n        if (num === 1) {\n          sprite = null;\n        } else {\n          id = null;\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Makr this sounded as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n      // Update the parameters of the sound\n      sound._paused = false;\n      sound._ended = false;\n      sound._sprite = sprite;\n      sound._seek = seek;\n      sound._start = self._sprite[sprite][0] / 1000;\n      sound._stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // End the sound instantly if seek is at the end.\n      if (sound._seek >= sound._stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running') {\n          playWebAudio();\n        } else {\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Mobile browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n                });\n            } else if (!internal) {\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Make sure the volume is in the right bounds.\n        vol = Math.max(0, vol);\n        vol = Math.min(1, vol);\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            sound._rateSeek = self.seek(id[i]);\n            sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n          if (!checkIE) {\n            sounds[i]._node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n          }\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n      }\n      node.bufferSource = null;\n\n      return self;\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else {\n        self._node = new Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.withCredentials = self._xhrWithCredentials;\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : 1, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.0.15\n *  howlerjs.com\n *\n *  (c) 2013-2018, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = isTouchDevice;\nfunction isTouchDevice() {\n  return !!(typeof window !== 'undefined' && ('ontouchstart' in window || window.DocumentTouch && typeof document !== 'undefined' && document instanceof window.DocumentTouch)) || !!(typeof navigator !== 'undefined' && (navigator.maxTouchPoints || navigator.msMaxTouchPoints));\n}\nmodule.exports = exports['default'];","'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict'\n\nimport { Howl } from 'howler'\n\nvar isTouchDevice = require('is-touch-device')\nvar assert = require('assert')\nassert.strictEqual(typeof isTouchDevice(), 'boolean')\n\n// Helpers -----------------------------------------------------//\nfunction randomIntFromInterval (min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nif (isTouchDevice()) {\n  document.body.classList.add('has-touch')\n}\n\nfunction getPosition(element) {\n  var posXStart = 0\n  var posYStart = 0\n  var posXEnd = 0\n  var posYEnd = 0\n  while (element) {\n    posXStart += element.offsetLeft - element.scrollLeft + element.clientLeft\n    posYStart += element.offsetTop - element.scrollTop + element.clientTop\n    element = element.offsetParent\n  }\n  posXEnd = posXStart + element.width()\n  posYEnd = posYStart + element.height()\n\n  return { x: posXStart, y: posYStart, x2: posXEnd, y2: posYEnd }\n}\n\nvar synth = (function () {\n  const STAFF_TYPE_PREFIX = 'staff-'\n  const NOTEHEAD_PREFIX = 'note-'\n  const SOUNDS_DIRECTORY = '/assets/sounds/'\n\n  // Cache DOM ---------------------------------------------------//\n  var synth, keys, instrumentIcons, instrumentIconWrapper, noteheads, keyLetters, prevArrow, nextArrow, numInstruments\n\n  function _cacheDOM () {\n    synth = document.getElementById('synth')\n    keys = synth.querySelectorAll('.synth-key')\n    instrumentIcons = synth.querySelectorAll('.instrument')\n    instrumentIconWrapper = synth.querySelector('.synth-instrument')\n    noteheads = synth.querySelectorAll('.notehead')\n    keyLetters = synth.querySelectorAll('.key-letter')\n    prevArrow = synth.querySelector('.instrument-prev')\n    nextArrow = synth.querySelector('.instrument-next')\n  }\n\n  // Load essential UI sounds to be ready for initial click\n  var sounds = {\n    ui: {\n      click: {\n        howl: new Howl({\n          src: [`${SOUNDS_DIRECTORY}click.mp3`]\n        })\n      },\n\n      ding: {\n        howl: new Howl({\n          src: [`${SOUNDS_DIRECTORY}ding.mp3`]\n        })\n      }\n    }\n  }\n\n  function _loadSounds () {\n    sounds = Object.assign({\n      instruments: [\n        {\n          name: 'Piano',\n          staffType: 'normal',\n          howl: new Howl({\n            src: [`${SOUNDS_DIRECTORY}piano.mp3`],\n            sprite: {\n              A3: [0, 3776.2131519274376],\n              Asharp3: [5000, 4848.390022675737],\n              B3: [11000, 5923.968253968254],\n              C3: [18000, 4685.034013605442],\n              C4: [24000, 6752.970521541951],\n              Csharp3: [32000, 5236.213151927437],\n              Csharp4: [39000, 4604.285714285716],\n              D3: [45000, 4814.603174603179],\n              D4: [51000, 5732.607709750568],\n              Dsharp3: [58000, 5294.943310657593],\n              Dsharp4: [65000, 4705.011337868484],\n              E3: [71000, 4688.752834467124],\n              E4: [77000, 4537.25623582767],\n              F3: [83000, 3645.7369614512486],\n              Fsharp3: [88000, 4553.219954648526],\n              G3: [94000, 4056.712018140587],\n              Gsharp3: [100000, 3850.2040816326544]\n            }\n          })\n        },\n        {\n          name: 'Harp',\n          staffType: 'normal',\n          howl: new Howl({\n            src: [`${SOUNDS_DIRECTORY}harp.mp3`],\n            sprite: {\n              A3: [0, 12151.768707482994],\n              Asharp3: [14000, 12141.70068027211],\n              B3: [28000, 7021.3378684807285],\n              C3: [37000, 10906.64399092971],\n              C4: [49000, 7013.015873015874],\n              Csharp3: [58000, 10908.888888888896],\n              Csharp4: [70000, 7000],\n              D3: [78000, 10893.67346938775],\n              D4: [90000, 6654.648526077097],\n              Dsharp3: [98000, 10879.977324263038],\n              Dsharp4: [110000, 6651.292517006808],\n              E3: [118000, 10858.526077097507],\n              E4: [130000, 6641.383219954661],\n              F3: [138000, 10847.2335600907],\n              Fsharp3: [150000, 10835.170068027197],\n              G3: [162000, 12151.904761904774],\n              Gsharp3: [176000, 12164.671201814059]\n            }\n          })\n        },\n        {\n          name: 'Xylophone',\n          staffType: 'normal',\n          howl: new Howl({\n            src: [`${SOUNDS_DIRECTORY}xylophone.mp3`],\n            sprite: {\n              A3: [0, 898.2993197278911],\n              Asharp3: [2000, 820.4535147392291],\n              B3: [4000, 791.5873015873016],\n              C3: [6000, 1268.27664399093],\n              C4: [9000, 811.2244897959187],\n              Csharp3: [11000, 1346.417233560091],\n              Csharp4: [14000, 780.6349206349204],\n              D3: [16000, 1340.7256235827667],\n              D4: [19000, 784.0136054421762],\n              Dsharp3: [21000, 1418.8662131519259],\n              Dsharp4: [24000, 828.3673469387764],\n              E3: [26000, 1311.3605442176884],\n              E4: [29000, 781.3832199546482],\n              F3: [31000, 1234.0816326530585],\n              Fsharp3: [34000, 1279.7732426303837],\n              G3: [37000, 830.7936507936518],\n              Gsharp3: [39000, 862.6077097505699]\n            }\n          })\n        },\n        {\n          name: 'Banjo',\n          staffType: 'normal',\n          howl: new Howl({\n            src: [`${SOUNDS_DIRECTORY}banjo.mp3`],\n            sprite: {\n              A3: [0, 2340.3401360544217],\n              Asharp3: [4000, 2356.4172335600906],\n              B3: [8000, 2190.181405895691],\n              C3: [12000, 2238.2993197278915],\n              C4: [16000, 2223.197278911563],\n              Csharp3: [20000, 2314.376417233561],\n              Csharp4: [24000, 2355.4421768707493],\n              D3: [28000, 2359.50113378685],\n              D4: [32000, 2356.870748299322],\n              Dsharp3: [36000, 2354.943310657596],\n              Dsharp4: [40000, 2253.401360544217],\n              E3: [44000, 2276.848072562359],\n              E4: [48000, 2241.4512471655357],\n              F3: [52000, 2358.004535147394],\n              Fsharp3: [56000, 2355.1020408163267],\n              G3: [60000, 2357.48299319728],\n              Gsharp3: [64000, 2234.444444444449]\n            }\n          })\n        },\n        {\n          name: 'Ocarina',\n          staffType: 'normal',\n          howl: new Howl({\n            src: [`${SOUNDS_DIRECTORY}ocarina.mp3`],\n            sprite: {\n              A3: [0, 195.37414965986395],\n              Asharp3: [2000, 183.33333333333312],\n              B3: [4000, 198.66213151927425],\n              C3: [6000, 172.2222222222225],\n              C4: [8000, 190.3628117913829],\n              Csharp3: [10000, 183.0158730158722],\n              Csharp4: [12000, 201.9501133786843],\n              D3: [14000, 188.5260770975048],\n              D4: [16000, 193.96825396825434],\n              Dsharp3: [18000, 203.85487528344726],\n              Dsharp4: [20000, 182.9251700680281],\n              E3: [22000, 210.61224489795904],\n              E4: [24000, 180.38548752834416],\n              F3: [26000, 200.13605442176896],\n              Fsharp3: [28000, 204.3990929705224],\n              G3: [30000, 205.39682539682502],\n              Gsharp3: [32000, 192.58503401360372]\n            }\n          })\n        },\n        {\n          name: 'Drag',\n          staffType: 'drag',\n          howl: new Howl({\n            src: [`${SOUNDS_DIRECTORY}rupaul.mp3`],\n            sprite: {\n              A3: [0, 2972.154195011338],\n              Asharp3: [4000, 743.0385487528346],\n              B3: [6000, 2229.1156462585027],\n              C3: [10000, 5201.269841269841],\n              C4: [17000, 2972.1541950113383],\n              Csharp3: [21000, 2229.1156462585027],\n              Csharp4: [25000, 5944.308390022677],\n              D3: [32000, 2229.1156462585063],\n              D4: [36000, 1486.077097505671],\n              Dsharp3: [39000, 2229.1156462585063],\n              Dsharp4: [43000, 743.0385487528355],\n              E3: [45000, 1486.077097505671],\n              E4: [48000, 1486.077097505671],\n              F3: [51000, 1486.077097505671],\n              Fsharp3: [54000, 2229.1156462585063],\n              G3: [58000, 1486.077097505671],\n              Gsharp3: [61000, 1486.077097505671]\n            }\n          })\n        },\n        {\n          name: 'Butts',\n          staffType: 'butts',\n          howl: new Howl({\n            src: [`${SOUNDS_DIRECTORY}farts.mp3`],\n            sprite: {\n              A3: [0, 1255.1927437641723],\n              Asharp3: [3000, 1780.9977324263039],\n              B3: [6000, 1825.8956916099773],\n              C3: [9000, 2000],\n              C4: [12000, 325.9410430838994],\n              Csharp3: [14000, 2000],\n              Csharp4: [17000, 768.4807256235829],\n              D3: [19000, 550.0226757369617],\n              D4: [21000, 322.44897959183663],\n              Dsharp3: [23000, 880.9070294784576],\n              Dsharp4: [25000, 2207.6870748299307],\n              E3: [29000, 1815.5102040816332],\n              E4: [32000, 2511.4512471655316],\n              F3: [36000, 1556.1904761904727],\n              Fsharp3: [39000, 297.43764172335574],\n              G3: [41000, 506.9160997732425],\n              Gsharp3: [43000, 393.33333333333087]\n            }\n          })\n        },\n        {\n          name: 'Super Mario World',\n          staffType: 'mario',\n          howl: new Howl({\n            src: [`${SOUNDS_DIRECTORY}mario.mp3`],\n            sprite: {\n              A3: [0, 433.78684807256235],\n              Asharp3: [2000, 489.25170068027234],\n              B3: [4000, 571.8367346938775],\n              C3: [6000, 653.9229024943314],\n              C4: [8000, 395.8276643990928],\n              Csharp3: [10000, 987.6643990929708],\n              Csharp4: [12000, 332.92517006802666],\n              D3: [14000, 337.86848072562316],\n              D4: [16000, 651.3832199546492],\n              Dsharp3: [18000, 1592.9251700680284],\n              Dsharp4: [21000, 474.8299319727885],\n              E3: [23000, 244.89795918367463],\n              E4: [25000, 826.2131519274369],\n              F3: [27000, 658.5487528344664],\n              Fsharp3: [29000, 660.1814058956918],\n              G3: [31000, 109.75056689342466],\n              Gsharp3: [33000, 822.3129251700669]\n            }\n          })\n        }\n      ]\n    }, sounds)\n\n    for (var i = 0; i < sounds.ui.length; i++) {\n      sounds.ui[i].howl.load()\n    }\n\n    for (var j = 0; j < sounds.instruments.length; j++) {\n      sounds.instruments[i].howl.load()\n    }\n\n    numInstruments = sounds.instruments.length - 1\n  }\n\n  function _unloadSounds () {\n    for (var i = 0; i < sounds.ui.length; i++) {\n      sounds.ui[i].howl.unload()\n    }\n\n    for (var j = 0; j < sounds.instruments.length; j++) {\n      sounds.instruments[i].howl.unload()\n    }\n  }\n\n  // State -------------------------------------------------------//\n  var activeInstrument = 0\n  var isMouseDown = false\n  var isTouching = false\n  var noteFadeOut\n\n  function _enableSynth () {\n    if (synth.dataset.enabled !== 'true') {\n      synth.dataset.enabled = 'true'\n      _loadSounds()\n      setRandomInstrument(revealKeyboardLetters)\n    }\n  }\n\n  function _disableSynth () {\n    if (synth.dataset.enabled !== 'false') {\n      synth.dataset.enabled = 'false'\n      _unloadSounds()\n    }\n  }\n\n  // Instrument Chooser -----------------------------------------//\n  function setRandomInstrument (callback) {\n    synth.dataset.loading = 'true'\n\n    const baseSpeed = randomIntFromInterval(30, 50) // Lower is faster\n    const force = randomIntFromInterval(5, 30) // How hard do you 'pull down the wheel'?\n    const slowestSpeed = 700 // How slow can the roulette go before ending?\n    const friction = 1.3 // How quickly to put on the brakes (1 to 1.5)\n\n    var speed = baseSpeed\n    var i = 1\n    var timeout\n\n    var roulette = function () {\n      nextInstrument()\n      i++\n\n      if (speed >= slowestSpeed) {\n        sounds.ui.ding.howl.play()\n        synth.dataset.loading = 'false'\n        clearTimeout(timeout)\n        if (callback) {\n          callback()\n        }\n      } else {\n        speed *= friction\n        if (i <= force) {\n          speed *= 0.8\n        }\n        timeout = setTimeout(roulette, speed)\n      }\n    }\n\n    setTimeout(roulette, speed)\n  }\n\n  function showActiveInstrumentIcon () {\n    Array.from(instrumentIcons).forEach(icon => {\n      icon.style.display = 'none'\n    })\n    instrumentIcons[activeInstrument].style.display = 'block'\n  }\n\n  function setActiveInstrument (num) {\n    if (num > numInstruments) {\n      num = 0\n    } else if (num < 0) {\n      num = numInstruments\n    }\n\n    activeInstrument = num\n    showActiveInstrumentIcon()\n  }\n\n  function nextInstrument () {\n    setActiveInstrument(activeInstrument + 1)\n    sounds.ui.click.howl.play()\n  }\n\n  function prevInstrument () {\n    setActiveInstrument(activeInstrument - 1)\n    sounds.ui.click.howl.play()\n  }\n\n  // Musical Staff ---------------------------------------------//\n  function showActiveNotehead (noteName) {\n    // Clear existing fadeout timer, if one exists\n    clearTimeout(noteFadeOut)\n    // Immediately hide any visible noteheads\n    hideNoteheads()\n\n    var staffType = sounds.instruments[activeInstrument].staffType\n    var currentStaff = STAFF_TYPE_PREFIX + staffType\n    var currentNote = '.' + currentStaff + ' .' + NOTEHEAD_PREFIX + noteName\n\n    synth.querySelector(currentNote).style.display = 'block'\n\n    // Prep a timer to fade out noteheads\n    // if no other actions are taken\n    noteFadeOut = setTimeout(function () {\n      hideNoteheads()\n    }, 5000)\n  }\n\n  function hideNoteheads () {\n    Array.from(noteheads).forEach(notehead => {\n      notehead.style.display = 'none'\n    })\n  }\n\n  // Keyboard ----------------------------------------------------//\n  function revealKeyboardLetters () {\n    // Only show keyboard on non-touch devices\n    if (!isTouchDevice()) {\n      Array.from(keyLetters).forEach(function (letter, i) {\n        setTimeout(function () {\n          letter.classList.add('visible')\n        }, i * 30)\n      })\n    }\n  }\n\n  function hideKeyboardLetters () {\n    Array.from(keyLetters).forEach(letter => {\n      letter.classList.add('fadeout')\n      setTimeout(function () {\n        letter.classList.remove('visible')\n      }, 2000)\n    })\n  }\n\n  function pressKey (noteName) {\n    var keyId = document.getElementById(noteName)\n    if (!keyId.classList.contains('pressed')) {\n      keyId.classList.add('pressed')\n      playNote(noteName)\n      showActiveNotehead(noteName)\n    }\n  }\n\n  function pressKeyMatchingCoords (x, y) {\n    Array.from(keys).forEach(key => {\n      var posXStart = key.offset().left\n      var posYStart = key.offset().top - window.scrollTop()\n      var posXEnd =\n        key.offset().left + key[0].getBoundingClientRect().width\n      var posYEnd =\n        key.offset().top + key[0].getBoundingClientRect().height\n\n      if (x >= posXStart && x <= posXEnd && y >= posYStart && y <= posYEnd) {\n        releaseAllKeys()\n        var noteName = key[0].id\n        playNote(noteName)\n        key.classList.add('pressed')\n      }\n    })\n  }\n\n  function releaseKey (noteName) {\n    document.getElementById(noteName).classList.remove('pressed')\n  }\n\n  function releaseAllKeys () {\n    Array.from(keys).forEach(key => {\n      key.classList.remove('pressed')\n    })\n  }\n\n  function playNote (noteName) {\n    sounds.instruments[activeInstrument].howl.play(noteName)\n  }\n\n  // Event Binding ---------------------------------------------//\n  var handleClickNext = function (e) {\n    e.preventDefault()\n    nextInstrument()\n  }\n\n  var handleClickPrev = function (e) {\n    e.preventDefault()\n    prevInstrument()\n  }\n\n  var handleClickInstrument = function (e) {\n    e.preventDefault()\n    setRandomInstrument()\n  }\n\n  var handleMouseDown = function (e) {\n    e.preventDefault()\n    hideKeyboardLetters()\n    isMouseDown = true\n    pressKey(this.id)\n  }\n\n  var handleMouseEnter = function (e) {\n    e.preventDefault()\n    if (isMouseDown) {\n      pressKey(this.id)\n    }\n  }\n\n  var handleMouseOut = function (e) {\n    e.preventDefault()\n    releaseKey(this.id)\n  }\n\n  var handleTouchStart = function (e) {\n    e.preventDefault()\n    hideKeyboardLetters()\n    isTouching = true\n    pressKey(this.id)\n  }\n\n  var handleTouchEnter = function (e) {\n    e.preventDefault()\n    if (isTouching) {\n      pressKey(this.id)\n    }\n  }\n\n  var handleTouchMove = function (e) {\n    var touch = e.originalEvent.touches[0]\n    pressKeyMatchingCoords(touch.clientX, touch.clientY)\n  }\n\n  var handleMouseUp = function () {\n    isMouseDown = false\n    releaseAllKeys()\n  }\n\n  var handleTouchEnd = function () {\n    isTouching = false\n    releaseAllKeys()\n  }\n\n  var handleKeyDown = function (e) {\n    if (synth.dataset.loading === 'false') {\n      hideKeyboardLetters()\n      switch (e.key) {\n        case 'ArrowLeft':\n          e.preventDefault()\n          prevInstrument()\n          break\n        case 'ArrowRight':\n          e.preventDefault()\n          nextInstrument()\n          break\n        case 'a':\n        case 'A':\n          e.preventDefault()\n          pressKey('C3')\n          break\n        case 'w':\n        case 'W':\n          e.preventDefault()\n          pressKey('Csharp3')\n          break\n        case 's':\n        case 'S':\n          e.preventDefault()\n          pressKey('D3')\n          break\n        case 'e':\n        case 'E':\n          e.preventDefault()\n          pressKey('Dsharp3')\n          break\n        case 'd':\n        case 'D':\n          e.preventDefault()\n          pressKey('E3')\n          break\n        case 'f':\n        case 'F':\n          e.preventDefault()\n          pressKey('F3')\n          break\n        case 't':\n        case 'T':\n          e.preventDefault()\n          pressKey('Fsharp3')\n          break\n        case 'g':\n        case 'G':\n          e.preventDefault()\n          pressKey('G3')\n          break\n        case 'y':\n        case 'Y':\n          e.preventDefault()\n          pressKey('Gsharp3')\n          break\n        case 'h':\n        case 'H':\n          e.preventDefault()\n          pressKey('A3')\n          break\n        case 'u':\n        case 'U':\n          e.preventDefault()\n          pressKey('Asharp3')\n          break\n        case 'j':\n        case 'J':\n          e.preventDefault()\n          pressKey('B3')\n          break\n        case 'k':\n        case 'K':\n          e.preventDefault()\n          pressKey('C4')\n          break\n        case 'o':\n        case 'O':\n          e.preventDefault()\n          pressKey('Csharp4')\n          break\n        case 'l':\n        case 'L':\n          e.preventDefault()\n          pressKey('D4')\n          break\n        case 'p':\n        case 'P':\n          e.preventDefault()\n          pressKey('Dsharp4')\n          break\n        case ';':\n        case ':':\n          e.preventDefault()\n          pressKey('E4')\n          break\n      }\n    }\n  }\n\n  var handleKeyUp = function (e) {\n    switch (e.key) {\n      case 'a':\n      case 'A':\n        releaseKey('C3')\n        break\n      case 'w':\n      case 'W':\n        releaseKey('Csharp3')\n        break\n      case 's':\n      case 'S':\n        releaseKey('D3')\n        break\n      case 'e':\n      case 'E':\n        releaseKey('Dsharp3')\n        break\n      case 'd':\n      case 'D':\n        releaseKey('E3')\n        break\n      case 'f':\n      case 'F':\n        releaseKey('F3')\n        break\n      case 't':\n      case 'T':\n        releaseKey('Fsharp3')\n        break\n      case 'g':\n      case 'G':\n        releaseKey('G3')\n        break\n      case 'y':\n      case 'Y':\n        releaseKey('Gsharp3')\n        break\n      case 'h':\n      case 'H':\n        releaseKey('A3')\n        break\n      case 'u':\n      case 'U':\n        releaseKey('Asharp3')\n        break\n      case 'j':\n      case 'J':\n        releaseKey('B3')\n        break\n      case 'k':\n      case 'K':\n        releaseKey('C4')\n        break\n      case 'o':\n      case 'O':\n        releaseKey('Csharp4')\n        break\n      case 'l':\n      case 'L':\n        releaseKey('D4')\n        break\n      case 'p':\n      case 'P':\n        releaseKey('Dsharp4')\n        break\n      case ';':\n      case ':':\n        releaseKey('E4')\n        break\n    }\n  }\n\n  function _bindEvents () {\n    prevArrow.addEventListener('click', handleClickPrev)\n    nextArrow.addEventListener('click', handleClickNext)\n    synth.addEventListener('mouseup', handleMouseUp)\n    synth.addEventListener('touchend', handleTouchEnd)\n    Array.from(keys).forEach(key => {\n      key.addEventListener('mousedown', handleMouseDown)\n      key.addEventListener('mouseenter', handleMouseEnter)\n      key.addEventListener('mouseout', handleMouseOut)\n      key.addEventListener('touchstart', handleTouchStart)\n      key.addEventListener('touchenter', handleTouchEnter)\n      key.addEventListener('touchmove', handleTouchMove)\n    })\n    instrumentIconWrapper.addEventListener('click', handleClickInstrument)\n    document.addEventListener('keydown', handleKeyDown)\n    document.addEventListener('keyup', handleKeyUp)\n  }\n\n  function _unbindEvents () {\n    prevArrow.removeEventListener('click', handleClickPrev)\n    nextArrow.removeEventListener('click', handleClickNext)\n    synth.addEventListener('mouseup', handleMouseUp)\n    synth.removeEventListener('touchend', handleTouchEnd)\n    Array.from(keys).forEach(key => {\n      key.removeEventListener('mousedown', handleMouseDown)\n      key.removeEventListener('mouseenter', handleMouseEnter)\n      key.removeEventListener('mouseout', handleMouseOut)\n      key.removeEventListener('touchstart', handleTouchStart)\n      key.removeEventListener('touchenter', handleTouchEnter)\n      key.removeEventListener('touchmove', handleTouchMove)\n    })\n    instrumentIconWrapper.removeEventListener('click', handleClickInstrument)\n    document.removeEventListener('keydown', handleKeyDown)\n    document.removeEventListener('keyup', handleKeyUp)\n  }\n\n  function init () {\n    _cacheDOM()\n  }\n\n  function start () {\n    _enableSynth()\n    _bindEvents()\n  }\n\n  function stop () {\n    _disableSynth()\n    _unbindEvents()\n  }\n\n  return {\n    init: init,\n    start: start,\n    stop: stop\n  }\n})()\n\nexport default synth\n","'use strict'\n\nimport synth from './synth.js'\n\ndocument.addEventListener('DOMContentLoaded', function (event) {\n  // Run scripts on page change\n  function refresh () {\n    // Open all external links in new tab\n    for (var c = document.getElementsByTagName('a'), a = 0; a < c.length; a++) {\n      var b = c[a]\n      b.getAttribute('href') && b.hostname !== window.location.hostname && (b.target = '_blank')\n    }\n\n    window.gtag('config', 'UA-36543481-1', {\n      'page_title': document.title,\n      'page_path': window.location.pathname + window.location.search\n    })\n\n    if (document.querySelector('#synth') !== null) {\n      synth.init()\n      document.querySelector('#synth-start').addEventListener('click', () => {\n        synth.start()\n      })\n    }\n  }\n\n  function init () {\n    refresh()\n  }\n\n  init()\n})\n"],"sourceRoot":""}